namespace Ntk {
	[CCode (cheader_filename = "ntk/ntk.h", type_id = "ntk_context_get_type ()")]
	[Version (since = "0.1.0")]
  public class Context : GLib.Object, GLib.Initable {
    public Ntk.Renderer renderer { get; construct; }
    public Pango.FontDescription font_description { get; set construct; }

    public Context(Ntk.Renderer renderer) throws GLib.Error;

    public bool render(Ntk.ContextDrawCallback callback) throws GLib.Error;
  }

	[CCode (cheader_filename = "ntk/ntk.h", type_id = "ntk_input_dispatcher_get_type ()")]
	[Version (since = "0.1.0")]
	public abstract class InputDispatcher : GLib.Object {}

	[CCode (cheader_filename = "ntk/ntk.h", type_id = "ntk_font_get_type ()")]
	[Version (since = "0.1.0")]
	public abstract class Font : GLib.Object {}

	[CCode (cheader_filename = "ntk/ntk.h", type_id = "ntk_renderer_get_type ()")]
	[Version (since = "0.1.0")]
	public abstract class Renderer : GLib.Object {}

	[CCode (cheader_filename = "ntk/ntk.h", has_type_id = false)]
	[Compact]
	[Version (since = "0.1.0")]
	public struct RendererDrawCommand : Nk.Command {}

	[CCode (cheader_filename = "ntk/ntk.h", instance_pos = 2.9)]
	[Version (since = "0.1.0")]
	public delegate void ContextDrawCallback (Ntk.Context context, Nk.Context nuklear);
}
